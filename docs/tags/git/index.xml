<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on haKiwata</title>
    <link>https://hakiwata.jp/tags/git/</link>
    <description>Recent content in git on haKiwata</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2021 haKiwata</copyright>
    <lastBuildDate>Sun, 13 Jun 2021 06:13:26 +0900</lastBuildDate><atom:link href="https://hakiwata.jp/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>.gitconfig を使って untracked files のみを退避させる</title>
      <link>https://hakiwata.jp/post/20210613/</link>
      <pubDate>Sun, 13 Jun 2021 06:13:26 +0900</pubDate>
      
      <guid>https://hakiwata.jp/post/20210613/</guid>
      <description>概要  自分で運用しているブログサイトは git を用いて管理しています。新しい記事を作成する際に、untracked files のみを git stash して、退避させたいことがありました。しかし、git にはデフォルトで untracked files のみを退避させるコマンドは無いそうです。そこで、今回は .gitconfig を使用して工夫したことについての記録を残したいと思います。  背景と目的   新しい記事を作成するために hugo new コマンドで記事の雛形を作成します。過去に書いた記事を参考にしつつ新しい記事を書いていると、過去の記事にタイポを見つけて修正したくなることや、言い回しを変えたくなる時があります。その内容を修正しつつ、一通り満足の行く新しい記事を書き終えると、hugo コマンドで修正したり作成したファイルを build を行った後に push する必要があります。しかし、修正した過去の記事と新規作成した記事の build を別々に行った後に push してコミットを分けたいと考えています。そのため、このようなケースでは一旦新規作成した記事を退避させて build を行い、push します。そして、その後に git stash pop で退避させた新規作成した記事を元に戻してから build を行い、push するようにします。
  こうして untracked files のみを退避させたいのですが、このコマンドは毎回調べているイメージがありました。その調べている時間が無駄でもったいないと感じていました。そこで、今回はその無駄な手順を省くために .gitconfig を使用し、 untracked files のみを退避させるエイリアスを設定しました。また、.bashrc に記述していた git コマンドのエイリアスも .gitconfig に移して、設定ファイルの整理も行いました。
  方法  untracked files のみを退避させる方法は How to git stash only untracked files?</description>
    </item>
    
  </channel>
</rss>
