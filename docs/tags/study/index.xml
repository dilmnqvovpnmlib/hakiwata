<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Study on haKiwata</title>
    <link>https://hakiwata.jp/tags/study/</link>
    <description>Recent content in Study on haKiwata</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2021 haKiwata</copyright>
    <lastBuildDate>Tue, 15 Jun 2021 00:34:14 +0900</lastBuildDate><atom:link href="https://hakiwata.jp/tags/study/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5 月の振り返り</title>
      <link>https://hakiwata.jp/post/20210615/</link>
      <pubDate>Tue, 15 Jun 2021 00:34:14 +0900</pubDate>
      
      <guid>https://hakiwata.jp/post/20210615/</guid>
      <description>概要  こんにちは！振り返りでは 1 月 ~ 4 月に勉強したことを振り返りました。しかし、6 月に入っても未だに 5 月に勉強したことをブログに書いて振り返ることができていませんでした。そこで、今回は 5 月に勉強したことを毎日メモしているノートを参考にザックリまとめたいと思います。  勉強したこと  ここには、趣味で勉強したことと大学院生活に関するに分けて書きました。  趣味に関すること  C 言語で Exercism を 2 問解きました。 自作エディタ keditor を実装しました。  参考にする自作エディタ kilo のコードリーディングを行いました。 また、Build Your Own Text Editor を読みました。これは kilo の解説記事です。そのため、コードリーディングにおける自分の解釈と照らし合わせながら読みました。この際に、必要なライブラリや処理の調査と検証をログに残しつつ行いました。 上のプロセスを経て keditor を実装しました。   Linux のシステムコールの静的解析を行いました。  この内容はブログにしようと思いながら時間が経ってしまっています。今月中には書きたいと考えています。   C 言語で #include &amp;lt;stdio.h&amp;gt; を行わずに Hello World を標準出力に表示させました。  この内容はブログにしようと思いながら時間が経ってしまっています。今月中には書きたいと考えています。   基礎からわかるTCP/IP ネットワーク実験プログラミング（第2版） を読みました。  詳しくは Network Programming の基礎を学んだ に書きました。   ProjectEuler を 24 問解きました。 Heroku 上に Flask で作成した REST API をデプロイしました。 プログラミングの基礎を読み始めました。 ブログを 3 本書きました。   研究に関すること  研究の進捗報告を 1 回しました。 大学院の講義のレポートを何本か書きました。  感想  こうして振り返ってみると、異常に多くのことをこなしていてビックリしました。もちろん GW があったのが一つの理由ではあると思います。毎日つけているノートを振り返ると、そういやこんなことしてたなぁと思い返したり、やり残していることに気づいたりと、色々と振り返ることができて良かったです。一方で今月はあまり進んでいない気もしてきました。今月も折り返していますので、残りの後半も頑張りたいと思います！  参考  Exercism keditor BinaryAnalysisBook/s6 kiso_tcp flask-api  </description>
    </item>
    
    <item>
      <title>今年中に一つでも多く勉強したいこと</title>
      <link>https://hakiwata.jp/post/20210518/</link>
      <pubDate>Tue, 18 May 2021 04:27:07 +0900</pubDate>
      
      <guid>https://hakiwata.jp/post/20210518/</guid>
      <description>概要  こんにちは！最近は、ネットワーク周りのシステムコールやライブラリ関数の調査と検証が多く、わかりやすい進捗が出ていない気がしています。そこで、気晴らしに今年中に勉強したいことを洗い出してみました。一旦アウトプットすることで、頭の中がクリアになればと思っています。  勉強したい内容 今年入って勉強してきたことの上乗せ   基礎からわかるTCP/IP ネットワーク実験プログラミング（第2版） を読む
 ネットワークのパケットを C 言語のプログラムレベルで理解したい。    ハロー“Hello, World” OSと標準ライブラリのシゴトとしくみ を読む
 動的解析の観点からシステムコールを学びたい。    サイバーセキュリティプログラミング ―Pythonで学ぶハッカーの思考 を読む
 セキュリティの観点から年のパケットをプログラムレベルで理解したい。    Hacking: 美しき策謀 第2版 ―脆弱性攻撃の理論と実際 を読む
 今年に学んだことを PWN などに応用して、セキュリティ的な観点からも更に理解を深めたい。    低レベルプログラミング を読む
 アセンブリ言語や C 言語や型システムを学びたい。 また、今年は、C 言語やアセンブリ言語を勉強してきたので、新たな書籍で体系的に学びたい。    例解UNIX/Linuxプログラミング教室: システムコールを使いこなすための12講 を読む
 今年は、シスプロを多めに勉強してきたので、違う書籍の違う観点から新しい知見を得たい。    ふつうの Linux プログラミングの Http Server の章を読み直す</description>
    </item>
    
    <item>
      <title>振り返り</title>
      <link>https://hakiwata.jp/post/20210512/</link>
      <pubDate>Wed, 12 May 2021 03:07:55 +0900</pubDate>
      
      <guid>https://hakiwata.jp/post/20210512/</guid>
      <description>概要  こんにちは！今年も月日が経つのが早く 1 年の内の 1/3 が過ぎ去ってしまいました。後輩や友達に今年に入って何を勉強してきたのかを聞かれることがたまにあるので、その記録を残していきたいと思います。基本的に大学院の課題や研究は除いています。  1 月   そもそも今年のテーマは Computer Science の基礎を固めることでした。もう少し具体的に言うと、OS, CPU, Network, Container の仕組みをコードレベルで勉強したいと考えていました。そこで、まずコンピュータの全体像を掴むために、以下の本を 2 月中旬まで読んでいました。
 コンピュータシステムの理論と実装 ―モダンなコンピュータの作り方    この本は Nand to Tetris とも呼ばれるのですが、CPU を構成する回路 (例えば全加算器や ALU) を VHDL で実装して、エミュレータで動かすところからレイヤーを徐々に上げていきます。作成した基本的な回路を元に、CPU をエミュレートします。その後、機械語やアセンブリ言語やスタックを学び、VM、独自言語のコンパイラをインクリメンタルに実装していきます。この本と付随する演習問題を全て解くことを通して、 CPU や VM と言った普段は意識しない低レイヤなものの振る舞いをなんとなくイメージできるようになりました。
  2 月   コンピュータシステムの理論と実装を読んで、特にアセンブリとコンパイラに興味を持ちました。そこで、以下の本と資料を読み始めました。
 はじめて学ぶバイナリ解析　不正なコードからコンピュータを守るサイバーセキュリティ技術 低レイヤを知りたい人のためのCコンパイラ作成入門    前者に関しては、CTFer にはおなじみですが、セキュリティ的な観点からスタックやアセンブリを学べました。初心者向けの本だったので、コンピュータシステムの理論と実装の復習にもなり、学びになりました。
  後者に関しては、 C 言語のコンパイラをテストコードと共にインクリメンタルに実装していくものです。このコンパイラを実装できれば、自作コンパイラのコードそのものや、xv6 をコンパイルできるとワクワクしていました。しかし、C 言語の理解が学部 1 年生レベルで止まっていたこともあり、型をコンパイルしてアセンブリを吐き出せるようになる手前で挫折してしまいました。毎日付けているノートを振り返ると、C 言語の理解の浅さとアセンブリ言語の知識が足りなかったと反省しています。</description>
    </item>
    
  </channel>
</rss>
