<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on haKiwata</title><link>https://hakiwata.jp/tags/docker/</link><description>Recent content in Docker on haKiwata</description><generator>Hugo -- gohugo.io</generator><copyright>&amp;copy; 2021 haKiwata</copyright><lastBuildDate>Sat, 26 Jun 2021 20:39:56 +0000</lastBuildDate><atom:link href="https://hakiwata.jp/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>自作ブログの開発環境を
Docker で移行した</title><link>https://hakiwata.jp/post/20210628/</link><pubDate>Sat, 26 Jun 2021 20:39:56 +0000</pubDate><guid>https://hakiwata.jp/post/20210628/</guid><description>概要 こんにちは！前回は、Hugo で Markdown が上手く parse されない原因を調査してみたという記事を書きました。この際、開発環境を Docker で作ることで、 Hugo のバージョンを上げました。そこで今回は、開発環境の移行で行ったことについての記録を残したいと思います。 背景と目的 もともとはホスト OS に Hugo のバイナリをインストールして開発環境を構築していました。しかし、この開発方法だと前回の記事のように Hugo のバイナリのバージョンを上げたいと思った時にすぐにバージョンアップをすることが面倒臭いです。そのため、今回は make コマンド と Docker を使用して開発の体験を上げ、Hugo のバージョンの変更に対応しやすいように開発環境を作り直しました。 方法 以下の 3 つの機能を make コマンド でまとめることが最終目標でした。 Hugo のバージョン管理をしやすくすること 開発用サーバを起動するコマンドを作ること 新規コンテンツを作成するコマンドを作ること 今回、実際に実装した Makefile は以下のようになりました。VERSION 変数 で Hugo のバージョン管理をしやすくしています。また、make server コマンドで開発用サーバが起動し、make new D=&amp;quot;directory name&amp;quot; で新規コンテンツのセットアップを行うようにしました。 VERSION=0.83.1 PORT=1313 OLD_VERSION=0.65.3 $(eval USER_ID := $(shell id -u $(USER))) $(eval GROUP_ID := $(shell id -g $(USER))) .</description></item></channel></rss>