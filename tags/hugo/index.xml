<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on haKiwata</title><link>https://hakiwata.jp/tags/hugo/</link><description>Recent content in Hugo on haKiwata</description><generator>Hugo -- gohugo.io</generator><copyright>&amp;copy; 2021 haKiwata</copyright><lastBuildDate>Sat, 26 Jun 2021 20:39:56 +0000</lastBuildDate><atom:link href="https://hakiwata.jp/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>自作ブログの開発環境を Docker で移行した</title><link>https://hakiwata.jp/post/20210628/</link><pubDate>Sat, 26 Jun 2021 20:39:56 +0000</pubDate><guid>https://hakiwata.jp/post/20210628/</guid><description>概要 こんにちは！前回は、Hugo で Markdown が上手く parse されない原因を調査してみたという記事を書きました。この際、開発環境を Docker で作ることで、 Hugo のバージョンを上げました。そこで今回は、開発環境の移行で行ったことについての記録を残したいと思います。 背景と目的 もともとはホスト OS に Hugo のバイナリをインストールして開発環境を構築していました。しかし、この開発方法だと前回の記事のように Hugo のバイナリのバージョンを上げたいと思った時にすぐにバージョンアップをすることが面倒臭いです。そのため、今回は make コマンド と Docker を使用して開発の体験を上げ、Hugo のバージョンの変更に対応しやすいように開発環境を作り直しました。 方法 以下の 3 つの機能を make コマンド でまとめることが最終目標でした。 Hugo のバージョン管理をしやすくすること 開発用サーバを起動するコマンドを作ること 新規コンテンツを作成するコマンドを作ること 今回、実際に実装した Makefile は以下のようになりました。VERSION 変数 で Hugo のバージョン管理をしやすくしています。また、make server コマンドで開発用サーバが起動し、make new D=&amp;quot;directory name&amp;quot; で新規コンテンツのセットアップを行うようにしました。 VERSION=0.83.1 PORT=1313 OLD_VERSION=0.65.3 $(eval USER_ID := $(shell id -u $(USER))) $(eval GROUP_ID := $(shell id -g $(USER))) .</description></item><item><title>Hugo で Markdown が上手く Parse されない原因を調査してみた</title><link>https://hakiwata.jp/post/20210624/</link><pubDate>Tue, 22 Jun 2021 13:08:38 +0000</pubDate><guid>https://hakiwata.jp/post/20210624/</guid><description>概要 こんにちは！前々回の記事で Table を表現する Markdown が上手く表示されないバグにハマってしまいました。今回は、そのバグをどのように調査して解決したかについての記録を残したいと思います。 背景 前々回の記事で CPU のアーキテクチャとレジスタの関係を表す表を記述しました。その Markdown の抜粋は以下になります。 | arch | syscall NR | | :---: | :---: | | x86 | eax | このように記述すると、表の中の文字列が中央揃えに表示される想定でした。しかし、表示結果は以下のように左揃えになっています。 これは、想定していた挙動と違っていました。HTML で言うところの、table タグ の align 属性 が適用されていません。そのため、この Markdown の記述で表の文字列が中央揃えになるようにトラブルシューティングとその改善をしたいと思います。 目的 Table の中央揃えと右揃えを表す Markdown が上手く Parse されない原因を明らかにし、改善するプロセスを振り返ることがこの記事の目的です。まず、この原因が Hugo 側にあるのか、あるいは Markdwon Parser に原因があるのか、あるいはそれ以外なのかを調査します。そしてその調査結果に基づいて不具合を修正します。 調査プロセスと解決方法 この問題の原因は大きく 2 つに分けられます。Hugo に問題があるケースと Markdown Parser に問題があるケースです。そこで、まず、Hugo が採用している Markdown Parser 側からの調査を行いました。</description></item><item><title>Hugo のテンプレートを修正してみた</title><link>https://hakiwata.jp/post/20210611/</link><pubDate>Fri, 11 Jun 2021 17:37:01 +0900</pubDate><guid>https://hakiwata.jp/post/20210611/</guid><description>概要 こんにちは！自分の Web サイトは Hugo を用いて運用しています。これまでは、デフォルトの設定で特に大きく変更すること無く使用していました。しかし、表示するコンテンツを追加したいと思い、思い切ってテンプレートに修正を加えていくことにしました。今回は、その際に行った修正などについての記録を残したいと思います。 背景と目的 記事を新しく追加していくと、Latest Posts の記事から、メモ的なお気に入りの記事が埋もれてしまう問題点がありました。現状の設定では Latest Posts に表示される記事の数は 5 件です。そこで、トップページに Favorite Posts の項目を追加し、メモ的なお気に入りの記事を表示させるようにしました。 方法 上述の目的を成し遂げるために以下の 3 つのことを行いました。 archetypes/default.md の Front Matter Variables に favorite: false を追加します。このパラメータは Favorite Posts の箇所に記事を表示させるかのフラグです。 Favorite Posts に表示させたい記事の Front Matter Variables に favorite: true を追記します。 themes/manis-hugo-theme/layouts/index.html を修正します。favorite: true の記事をフィルタリングし、 Favorite Posts を表示するようなロジックを追加します。 3 に関しては Latest Post のプログラムと公式のドキュメントの Hugo の文法を参考に実装しました。特に、Nest where Clauses が参考になりました。 感想 実装したい機能から逆算して修正すべきファイルに当たりをつけて、リバースエンジニアリング的に機能を拡張できて楽しかったです。Hugo は Golang の機能を活用して実装されています。Golang や Hugo に詳しいわけではないのですが、公式ドキュメントを読んでいると Hugo の文法も少し知ることができました。こうして、なんとか実現したい機能を調査と検証を繰り返しながら実装できて良かったです。また少し技術力が上がった気がします。 参考 Front Matter Nest where Clauses hakiwata/issues/3</description></item><item><title>First Post</title><link>https://hakiwata.jp/post/20210430/</link><pubDate>Fri, 30 Apr 2021 03:03:17 +0900</pubDate><guid>https://hakiwata.jp/post/20210430/</guid><description>サイトの移行 こんにちは！もともと自分のポートフォリオを Amazon EC2 にデプロイしていたのですが、AWS Education で割り当てられたクレジットが切れたので、Hugo + GitHub Pages で新しく作り直しました。思い立って 2 時間ほどで移行できたので、非常に便利だと思いました。</description></item></channel></rss>